#include <iostream>
#include <vector>
using namespace std;

void num_sum_min_distance_eff_2318_2()
{
    /**
ЦИКЛИЧЕСКИЙ БУФЕР
1) считываем первые 6 чисел в червяка (6 - расстояние между числами >=)
2) далее в цикле от 6 до n:
    а) выкидываем число из хвоста, закидываем аток от деления на 33 вышедшего из хвоста числа в счетчик
    б) вводим новую голову и смотрим с чем комплиментарен остаток от деления головы на 33, закидываем этот счетчик в глобальный
3) выводим глобальный счетчик

    **/

    int n, count = 0;
    cin >> n;
    vector<int> counters(33, 0); // завели массив для остатков

    vector<int> worm_num(6, 0); // завели массив из первых 6 чисел

    for (int i(0); i < 6; i++)
        cin >> worm_num[i];

    for (int i = 6; i < n; ++i)
    {
        counters[worm_num[i % 6] % 33] += 1; // смотрим остаток от деления и записываем в счетчик

        cin >> worm_num[i % 6]; // на место хвоста становится новое число (теперь это голова)

        count += counters[(33 - (worm_num[i % 6] % 33)) % 33]; // добавляем в глобальный счетчик комплиментарные остатки чисел

    }
    cout << count;
}

int main()
{
    num_sum_min_distance_eff_2318_2();
    return 0;
}
